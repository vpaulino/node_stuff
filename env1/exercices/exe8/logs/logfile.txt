Sun Oct 21 2012 16:32:31 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 380,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 16:32:31 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 380,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 16:32:31 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/homepage.html',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 380,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 16:32:31 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 16:32:31 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 698,
     _bytesDispatched: 161,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 2,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 16:32:31 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 16:32:31 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 698,
     _bytesDispatched: 161,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 2,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 16:32:31 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 16:32:31 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     accept: '*/*',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/favicon.ico',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 698,
     _bytesDispatched: 161,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 2,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 16:32:31 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 16:32:31 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 16:36:58 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 406,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 2,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 16:36:58 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 16:36:58 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 406,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 2,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 16:36:58 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 16:36:58 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     'cache-control': 'max-age=0',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/homepage.html',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 406,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 2,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 16:36:58 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 16:36:58 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 16:36:58 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 724,
     _bytesDispatched: 257,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 2,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 16:36:58 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 16:36:58 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 724,
     _bytesDispatched: 257,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 2,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 16:36:58 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 16:36:58 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     accept: '*/*',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/favicon.ico',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 724,
     _bytesDispatched: 257,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 2,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 16:36:58 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 16:36:58 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 16:37:07 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 1102,
     _bytesDispatched: 514,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 3,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 16:36:58 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 16:37:07 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 1102,
     _bytesDispatched: 514,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 3,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 16:36:58 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 16:37:07 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/myPage.html',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 1102,
     _bytesDispatched: 514,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 3,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 16:36:58 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 16:37:07 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 16:37:08 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 1420,
     _bytesDispatched: 784,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 3,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 16:36:58 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 16:37:08 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 1420,
     _bytesDispatched: 784,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 3,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 16:36:58 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 16:37:08 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     accept: '*/*',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/favicon.ico',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 1420,
     _bytesDispatched: 784,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 3,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 16:36:58 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 16:37:08 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:04:38 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 367,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:04:38 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 367,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:04:38 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 367,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:04:38 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:04:39 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 685,
     _bytesDispatched: 257,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 3,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 18:04:38 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:04:39 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 685,
     _bytesDispatched: 257,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 3,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 18:04:38 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:04:39 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     accept: '*/*',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/favicon.ico',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 685,
     _bytesDispatched: 257,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 3,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 18:04:38 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:04:39 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:04:45 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 1063,
     _bytesDispatched: 514,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 3,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 18:04:38 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:04:45 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 1063,
     _bytesDispatched: 514,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 3,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 18:04:38 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:04:45 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/myPage.html',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 1063,
     _bytesDispatched: 514,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 3,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 18:04:38 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:04:45 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:04:45 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 1381,
     _bytesDispatched: 1442,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 3,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 18:04:38 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:04:45 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 1381,
     _bytesDispatched: 1442,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 3,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 18:04:38 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:04:45 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     accept: '*/*',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/favicon.ico',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 1381,
     _bytesDispatched: 1442,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 3,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 18:04:38 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:04:45 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:08:32 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 404,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 2,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 18:08:32 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:08:32 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 404,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 2,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 18:08:32 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:08:32 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     'cache-control': 'max-age=0',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/myPage.html',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 404,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 2,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 18:08:32 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:08:32 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:08:32 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 722,
     _bytesDispatched: 1023,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 2,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 18:08:32 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:08:32 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 722,
     _bytesDispatched: 1023,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 2,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 18:08:32 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:08:32 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     accept: '*/*',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/favicon.ico',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 722,
     _bytesDispatched: 1023,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 2,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 18:08:32 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:08:32 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:17:55 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 404,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:17:55 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 404,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:17:55 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     'cache-control': 'max-age=0',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/myPage.html',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 404,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:17:55 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:17:55 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 722,
     _bytesDispatched: 987,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:17:55 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 722,
     _bytesDispatched: 987,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:17:55 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     accept: '*/*',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/favicon.ico',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 722,
     _bytesDispatched: 987,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:17:55 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:19:57 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 404,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:19:57 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 404,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:19:57 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     'cache-control': 'max-age=0',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/myPage.html',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 404,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:19:57 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:19:57 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 722,
     _bytesDispatched: 988,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:19:57 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 722,
     _bytesDispatched: 988,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:19:57 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     accept: '*/*',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/favicon.ico',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 722,
     _bytesDispatched: 988,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:19:57 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:20:43 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 1143,
     _bytesDispatched: 1245,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:20:43 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 1143,
     _bytesDispatched: 1245,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:20:43 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     'cache-control': 'no-cache',
     pragma: 'no-cache',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/myPage.html',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 1143,
     _bytesDispatched: 1245,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:20:43 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:20:44 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 1461,
     _bytesDispatched: 2246,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:20:44 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 1461,
     _bytesDispatched: 2246,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:20:44 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     accept: '*/*',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/favicon.ico',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 1461,
     _bytesDispatched: 2246,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:20:44 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:21:45 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 1882,
     _bytesDispatched: 2503,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:21:45 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 1882,
     _bytesDispatched: 2503,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:21:45 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     'cache-control': 'no-cache',
     pragma: 'no-cache',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/myPage.html',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 1882,
     _bytesDispatched: 2503,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:21:45 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:21:45 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 2200,
     _bytesDispatched: 3545,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:21:45 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 2200,
     _bytesDispatched: 3545,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:21:45 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     accept: '*/*',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/favicon.ico',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 2200,
     _bytesDispatched: 3545,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:21:45 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:22:02 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 2621,
     _bytesDispatched: 3802,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:22:02 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 2621,
     _bytesDispatched: 3802,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:22:02 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     'cache-control': 'no-cache',
     pragma: 'no-cache',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/myPage.html',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 2621,
     _bytesDispatched: 3802,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:22:02 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:22:03 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 2939,
     _bytesDispatched: 4844,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:22:03 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 2939,
     _bytesDispatched: 4844,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:22:03 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     accept: '*/*',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/favicon.ico',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 2939,
     _bytesDispatched: 4844,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:22:03 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:23:41 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 3317,
     _bytesDispatched: 5101,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:23:41 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 3317,
     _bytesDispatched: 5101,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:23:41 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/myPage.html',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 3317,
     _bytesDispatched: 5101,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:23:41 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:23:41 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 3635,
     _bytesDispatched: 6137,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:23:41 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 3635,
     _bytesDispatched: 6137,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:23:41 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     accept: '*/*',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/favicon.ico',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 3635,
     _bytesDispatched: 6137,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:23:41 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:25:06 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 4039,
     _bytesDispatched: 6394,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:25:06 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 4039,
     _bytesDispatched: 6394,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:25:06 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     'cache-control': 'max-age=0',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/myPage.html',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 4039,
     _bytesDispatched: 6394,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:25:06 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:25:06 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 4357,
     _bytesDispatched: 7390,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:25:06 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 4357,
     _bytesDispatched: 7390,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:25:06 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     accept: '*/*',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/favicon.ico',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 4357,
     _bytesDispatched: 7390,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:25:06 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:26:44 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 4761,
     _bytesDispatched: 7647,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:26:44 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 4761,
     _bytesDispatched: 7647,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:26:44 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     'cache-control': 'max-age=0',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/myPage.html',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 4761,
     _bytesDispatched: 7647,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:26:44 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:26:44 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 5079,
     _bytesDispatched: 8665,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:26:44 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 5079,
     _bytesDispatched: 8665,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:26:44 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     accept: '*/*',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/favicon.ico',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 5079,
     _bytesDispatched: 8665,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:26:44 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:28:12 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 5483,
     _bytesDispatched: 8922,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:28:12 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 5483,
     _bytesDispatched: 8922,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:28:12 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     'cache-control': 'max-age=0',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/myPage.html',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 5483,
     _bytesDispatched: 8922,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:28:12 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:28:12 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 5801,
     _bytesDispatched: 9924,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:28:12 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 5801,
     _bytesDispatched: 9924,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:28:12 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     accept: '*/*',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/favicon.ico',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 5801,
     _bytesDispatched: 9924,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:28:12 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:28:47 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 6205,
     _bytesDispatched: 10181,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:28:47 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 6205,
     _bytesDispatched: 10181,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:28:47 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     'cache-control': 'max-age=0',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/myPage.html',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 6205,
     _bytesDispatched: 10181,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:28:47 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:28:47 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 6523,
     _bytesDispatched: 11175,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:28:47 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 6523,
     _bytesDispatched: 11175,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:28:47 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     accept: '*/*',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/favicon.ico',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 6523,
     _bytesDispatched: 11175,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:28:47 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:29:25 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 6927,
     _bytesDispatched: 11432,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:29:25 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 6927,
     _bytesDispatched: 11432,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:29:25 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     'cache-control': 'max-age=0',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/myPage.html',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 6927,
     _bytesDispatched: 11432,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:29:25 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:29:25 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 7245,
     _bytesDispatched: 12450,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:29:25 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 7245,
     _bytesDispatched: 12450,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:29:25 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     accept: '*/*',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/favicon.ico',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 7245,
     _bytesDispatched: 12450,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:29:25 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:29:59 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 255,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 3,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 18:29:59 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:29:59 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 255,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 3,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 18:29:59 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:29:59 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { accept: 'text/html, application/xhtml+xml, */*',
     'accept-language': 'en-US',
     'user-agent': 'Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)',
     'accept-encoding': 'gzip, deflate',
     host: 'localhost:8080',
     connection: 'Keep-Alive' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/myPage.html',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 255,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 3,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 18:29:59 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:29:59 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:30:01 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 197,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 4,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 255,
        _bytesDispatched: 1018,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 18:29:59 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _httpMessage: null,
        _paused: false },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:30:01 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 197,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 4,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 255,
        _bytesDispatched: 1018,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 18:29:59 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _httpMessage: null,
        _paused: false },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:30:01 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { accept: '*/*',
     'accept-encoding': 'gzip, deflate',
     'user-agent': 'Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)',
     host: 'localhost:8080',
     connection: 'Keep-Alive' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/favicon.ico',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 197,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 4,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 255,
        _bytesDispatched: 1018,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 18:29:59 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _httpMessage: null,
        _paused: false },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:30:01 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:30:14 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 255,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 4,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 197,
        _bytesDispatched: 257,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 18:30:01 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _httpMessage: null,
        _paused: false },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:30:14 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 255,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 4,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 197,
        _bytesDispatched: 257,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 18:30:01 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _httpMessage: null,
        _paused: false },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:30:14 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { accept: 'text/html, application/xhtml+xml, */*',
     'accept-language': 'en-US',
     'user-agent': 'Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)',
     'accept-encoding': 'gzip, deflate',
     host: 'localhost:8080',
     connection: 'Keep-Alive' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/myPage.html',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 255,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 4,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 197,
        _bytesDispatched: 257,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 18:30:01 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _httpMessage: null,
        _paused: false },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:30:14 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:30:14 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 394,
     _bytesDispatched: 257,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 4,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 255,
        _bytesDispatched: 1018,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 18:30:14 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _httpMessage: null,
        _paused: false },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:30:14 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 394,
     _bytesDispatched: 257,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 4,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 255,
        _bytesDispatched: 1018,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 18:30:14 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _httpMessage: null,
        _paused: false },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:30:14 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { accept: '*/*',
     'accept-encoding': 'gzip, deflate',
     'user-agent': 'Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)',
     host: 'localhost:8080',
     connection: 'Keep-Alive' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/favicon.ico',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 394,
     _bytesDispatched: 257,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 4,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 255,
        _bytesDispatched: 1018,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 18:30:14 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _httpMessage: null,
        _paused: false },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:30:14 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:30:36 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 510,
     _bytesDispatched: 1018,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 4,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 394,
        _bytesDispatched: 514,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 18:30:14 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _httpMessage: null,
        _paused: false },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:30:36 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 510,
     _bytesDispatched: 1018,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 4,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 394,
        _bytesDispatched: 514,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 18:30:14 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _httpMessage: null,
        _paused: false },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:30:36 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { accept: 'text/html, application/xhtml+xml, */*',
     'accept-language': 'en-US',
     'user-agent': 'Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)',
     'accept-encoding': 'gzip, deflate',
     host: 'localhost:8080',
     connection: 'Keep-Alive' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/myPage.html',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 510,
     _bytesDispatched: 1018,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 4,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 394,
        _bytesDispatched: 514,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 18:30:14 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _httpMessage: null,
        _paused: false },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:30:36 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:30:50 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 510,
     _bytesDispatched: 1018,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 4,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 510,
        _bytesDispatched: 2036,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 18:30:36 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _httpMessage: null,
        _paused: false },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:30:50 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 510,
     _bytesDispatched: 1018,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 4,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 510,
        _bytesDispatched: 2036,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 18:30:36 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _httpMessage: null,
        _paused: false },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:30:50 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { accept: 'text/html, application/xhtml+xml, */*',
     'accept-language': 'en-US',
     'user-agent': 'Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)',
     'accept-encoding': 'gzip, deflate',
     host: 'localhost:8080',
     connection: 'Keep-Alive' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/myPage.html',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 510,
     _bytesDispatched: 1018,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 4,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 510,
        _bytesDispatched: 2036,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 18:30:36 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _httpMessage: null,
        _paused: false },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:30:50 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:30:53 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 765,
     _bytesDispatched: 2036,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 4,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 510,
        _bytesDispatched: 2036,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 18:30:50 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _httpMessage: null,
        _paused: false },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:30:53 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 765,
     _bytesDispatched: 2036,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 4,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 510,
        _bytesDispatched: 2036,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 18:30:50 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _httpMessage: null,
        _paused: false },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:30:53 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { accept: 'text/html, application/xhtml+xml, */*',
     'accept-language': 'en-US',
     'user-agent': 'Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)',
     'accept-encoding': 'gzip, deflate',
     host: 'localhost:8080',
     connection: 'Keep-Alive' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/myPage.html',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 765,
     _bytesDispatched: 2036,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 4,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 510,
        _bytesDispatched: 2036,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 18:30:50 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _httpMessage: null,
        _paused: false },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:30:53 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:33:02 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 280,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 2,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 18:33:02 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:33:02 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 280,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 2,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 18:33:02 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:33:02 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { accept: 'text/html, application/xhtml+xml, */*',
     'accept-language': 'en-US',
     'user-agent': 'Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)',
     'accept-encoding': 'gzip, deflate',
     host: 'localhost:8080',
     connection: 'Keep-Alive',
     'cache-control': 'no-cache' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/myPage.html',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 280,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 2,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 18:33:02 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:33:02 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:35:08 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 404,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:35:08 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 404,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:35:08 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     'cache-control': 'max-age=0',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/myPage.html',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 404,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:35:08 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:35:08 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 722,
     _bytesDispatched: 1001,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:35:08 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 722,
     _bytesDispatched: 1001,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:35:08 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     accept: '*/*',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/favicon.ico',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 722,
     _bytesDispatched: 1001,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:35:08 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:35:18 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 255,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 4,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 18:35:18 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:35:18 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 255,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 4,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 18:35:18 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:35:18 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { accept: 'text/html, application/xhtml+xml, */*',
     'accept-language': 'en-US',
     'user-agent': 'Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)',
     'accept-encoding': 'gzip, deflate',
     host: 'localhost:8080',
     connection: 'Keep-Alive' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/myPage.html',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 255,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 4,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 18:35:18 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:35:18 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:36:36 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 1126,
     _bytesDispatched: 1258,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:36:36 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 1126,
     _bytesDispatched: 1258,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:36:36 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     'cache-control': 'max-age=0',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/myPage.html',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 1126,
     _bytesDispatched: 1258,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:36:36 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:36:36 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 1444,
     _bytesDispatched: 2287,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:36:36 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 1444,
     _bytesDispatched: 2287,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:36:36 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     accept: '*/*',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/favicon.ico',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 1444,
     _bytesDispatched: 2287,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:36:36 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:36:45 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 1848,
     _bytesDispatched: 2544,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:36:45 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 1848,
     _bytesDispatched: 2544,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:36:45 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     'cache-control': 'max-age=0',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/myPage.html',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 1848,
     _bytesDispatched: 2544,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:36:45 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:36:45 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 2166,
     _bytesDispatched: 3575,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:36:45 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 2166,
     _bytesDispatched: 3575,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:36:45 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     accept: '*/*',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/favicon.ico',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 2166,
     _bytesDispatched: 3575,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:36:45 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:38:23 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 2570,
     _bytesDispatched: 3832,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:38:23 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 2570,
     _bytesDispatched: 3832,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:38:23 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     'cache-control': 'max-age=0',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/myPage.html',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 2570,
     _bytesDispatched: 3832,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:38:23 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:38:23 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 2888,
     _bytesDispatched: 5320,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:38:23 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 2888,
     _bytesDispatched: 5320,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:38:23 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     accept: '*/*',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/favicon.ico',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 2888,
     _bytesDispatched: 5320,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:38:23 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:38:30 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 255,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 3,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 18:38:30 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:38:30 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 255,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 3,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 18:38:30 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:38:30 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { accept: 'text/html, application/xhtml+xml, */*',
     'accept-language': 'en-US',
     'user-agent': 'Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)',
     'accept-encoding': 'gzip, deflate',
     host: 'localhost:8080',
     connection: 'Keep-Alive' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/myPage.html',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 255,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 3,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 18:38:30 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:38:30 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:44:46 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 404,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:44:46 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 404,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:44:46 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     'cache-control': 'max-age=0',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/myPage.html',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 404,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:44:46 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:44:46 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 722,
     _bytesDispatched: 1488,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:44:46 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 722,
     _bytesDispatched: 1488,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:44:46 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     accept: '*/*',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/favicon.ico',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 722,
     _bytesDispatched: 1488,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:44:46 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:47:24 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 404,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:47:24 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 404,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:47:24 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     'cache-control': 'max-age=0',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/myPage.html',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 404,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:47:24 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:47:24 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 722,
     _bytesDispatched: 1495,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:47:24 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 722,
     _bytesDispatched: 1495,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:47:24 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     accept: '*/*',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/favicon.ico',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 722,
     _bytesDispatched: 1495,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:47:24 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:50:15 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 404,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:50:15 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 404,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:50:15 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     'cache-control': 'max-age=0',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/myPage.html',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 404,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:50:15 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:50:15 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 722,
     _bytesDispatched: 1495,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:50:15 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 722,
     _bytesDispatched: 1495,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:50:15 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     accept: '*/*',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/favicon.ico',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 722,
     _bytesDispatched: 1495,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:50:15 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:55:53 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 404,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:55:53 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 404,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:55:53 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     'cache-control': 'max-age=0',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/myPage.html',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 404,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:55:53 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:55:53 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 722,
     _bytesDispatched: 1536,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:55:53 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 722,
     _bytesDispatched: 1536,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:55:53 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     accept: '*/*',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/favicon.ico',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 722,
     _bytesDispatched: 1536,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:55:53 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:56:48 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 1126,
     _bytesDispatched: 1793,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:56:48 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 1126,
     _bytesDispatched: 1793,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:56:48 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     'cache-control': 'max-age=0',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/myPage.html',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 1126,
     _bytesDispatched: 1793,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:56:48 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 18:56:48 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 1444,
     _bytesDispatched: 3341,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:56:48 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 1444,
     _bytesDispatched: 3341,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:56:48 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     accept: '*/*',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/favicon.ico',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 1444,
     _bytesDispatched: 3341,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 18:56:48 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 19:04:36 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 404,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 19:04:35 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 404,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 19:04:35 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     'cache-control': 'max-age=0',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/myPage.html',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 404,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 19:04:35 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 19:04:39 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 722,
     _bytesDispatched: 1608,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 2,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 19:04:36 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 19:04:39 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 722,
     _bytesDispatched: 1608,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 2,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 19:04:36 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 19:04:39 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     accept: '*/*',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/favicon.ico',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 722,
     _bytesDispatched: 1608,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 2,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 19:04:36 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 19:04:39 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 19:12:57 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 404,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 19:12:57 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 404,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 19:12:57 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     'cache-control': 'max-age=0',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/myPage.html',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 404,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 19:12:57 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 19:13:00 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 722,
     _bytesDispatched: 1672,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 2,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 19:12:57 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 19:13:00 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 722,
     _bytesDispatched: 1672,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 2,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 19:12:57 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 19:13:00 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     accept: '*/*',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/favicon.ico',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 722,
     _bytesDispatched: 1672,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 2,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 19:12:57 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 19:13:00 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 19:16:48 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 404,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 19:16:48 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 404,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 19:16:48 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     'cache-control': 'max-age=0',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/myPage.html',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 404,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 19:16:48 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 19:16:51 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 722,
     _bytesDispatched: 1718,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 2,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 19:16:49 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 19:16:51 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 722,
     _bytesDispatched: 1718,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 2,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 19:16:49 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 19:16:51 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     accept: '*/*',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/favicon.ico',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 722,
     _bytesDispatched: 1718,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 2,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 19:16:49 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 19:16:51 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 19:17:29 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 1126,
     _bytesDispatched: 1975,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 19:17:29 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 1126,
     _bytesDispatched: 1975,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 19:17:29 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     'cache-control': 'max-age=0',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/myPage.html',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 1126,
     _bytesDispatched: 1975,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 19:17:29 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 19:17:32 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 1444,
     _bytesDispatched: 3696,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 19:17:32 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 1444,
     _bytesDispatched: 3696,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 19:17:32 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     accept: '*/*',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/favicon.ico',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 1444,
     _bytesDispatched: 3696,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 19:17:32 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 19:18:59 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 1848,
     _bytesDispatched: 3953,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 19:18:59 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 1848,
     _bytesDispatched: 3953,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 19:18:59 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     'cache-control': 'max-age=0',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/myPage.html',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 1848,
     _bytesDispatched: 3953,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 19:18:59 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 19:19:07 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 2166,
     _bytesDispatched: 5674,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 19:19:07 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 2166,
     _bytesDispatched: 5674,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 19:19:07 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     accept: '*/*',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/favicon.ico',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 2166,
     _bytesDispatched: 5674,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 19:19:07 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 19:21:32 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 404,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 19:21:32 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 404,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 19:21:32 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     'cache-control': 'max-age=0',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/myPage.html',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 404,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 19:21:32 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 19:21:34 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 722,
     _bytesDispatched: 1721,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 2,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 19:21:32 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 19:21:34 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 722,
     _bytesDispatched: 1721,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 2,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 19:21:32 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 19:21:34 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     accept: '*/*',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/favicon.ico',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 722,
     _bytesDispatched: 1721,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 2,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Sun Oct 21 2012 19:21:32 GMT+0100 (GMT Daylight Time),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 19:21:34 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	Sun Oct 21 2012 19:38:01 GMT+0100 (GMT Daylight Time)Request received  : { socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 367,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 19:38:01 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 367,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 19:38:01 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8080',
     connection: 'keep-alive',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4',
     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3' },
  trailers: {},
  readable: true,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/',
  method: 'GET',
  statusCode: null,
  client: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 367,
     _bytesDispatched: 0,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { _connections: 1,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _events: [Object],
        _connectionKey: '4:0.0.0.0:8080' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        ontimeout: [Function] },
     _idleStart: Sun Oct 21 2012 19:38:01 GMT+0100 (GMT Daylight Time),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object] } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false }
	